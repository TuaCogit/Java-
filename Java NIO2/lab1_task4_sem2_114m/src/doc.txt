A BufferedInputStream adds functionality to another input stream-namely, the ability to buffer the input and to support the mark and reset methods. When the BufferedInputStream is created, an internal buffer array is created. As bytes from the stream are read or skipped, the internal buffer is refilled as necessary from the contained input stream, many bytes at a time. The mark operation remembers a point in the input stream and the reset operation causes all the bytes read since the most recent mark operation to be reread before new bytes are taken from the contained input stream.
Since:
1.0
Field Summary
Fields
Modifier and Type
Field
Description
protected byte[]
buf
The internal buffer array where the data is stored.
protected int
count
The index one greater than the index of the last valid byte in the buffer.
protected int
marklimit
The maximum read ahead allowed after a call to the mark method before subsequent calls to the reset method fail.
protected int
markpos
The value of the pos field at the time the last mark method was called.
protected int
pos
The current position in the buffer.
Fields declared in class java.io.FilterInputStream
in
Constructor Summary
Constructors
Constructor
Description
BufferedInputStream(InputStream in)
Creates a BufferedInputStream and saves its argument, the input stream in, for later use.
BufferedInputStream(InputStream in, int size)
Creates a BufferedInputStream with the specified buffer size, and saves its argument, the input stream in, for later use.
Method Summary
All MethodsInstance MethodsConcrete Methods
Modifier and Type
Method
Description
int
available()
Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream.
void
close()
Closes this input stream and releases any system resources associated with the stream.
void
mark(int readlimit)
See the general contract of the mark method of InputStream.
boolean
markSupported()
Tests if this input stream supports the mark and reset methods.
int
read()
See the general contract of the read method of InputStream.
int
read(byte[] b, int off, int len)
Reads bytes from this byte-input stream into the specified byte array, starting at the given offset.
void
reset()
See the general contract of the reset method of InputStream.
long
skip(long n)
See the general contract of the skip method of InputStream.
Methods declared in class java.io.FilterInputStream
read
Methods declared in class java.io.InputStream
nullInputStream, readAllBytes, readNBytes, readNBytes, skipNBytes, transferTo
Methods declared in class java.lang.Object
clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait
Field Details
buf
protected volatile byte[] buf
The internal buffer array where the data is stored. When necessary, it may be replaced by another array of a different size.
count
protected int count
The index one greater than the index of the last valid byte in the buffer. This value is always in the range 0 through buf.length; elements buf[0] through buf[count-1] contain buffered input data obtained from the underlying input stream.